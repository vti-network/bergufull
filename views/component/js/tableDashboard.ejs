<script>
    
function filterTable(inputId, columnIndex) {
    const inputElement = document.getElementById(inputId);
    const filterValue = inputElement.value.toUpperCase();
    const table = document.getElementById('transactionTable');
    const rows = table.getElementsByTagName('tr');

    for (let i = 0; i < rows.length; i++) {
        const cells = rows[i].getElementsByTagName('td')[columnIndex];
        if (cells) {
            const cellText = cells.textContent || cells.innerText;
            if (cellText.toUpperCase().indexOf(filterValue) > -1) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    }
}

const truncateString = (inputString, maxLength) => {
    if (inputString.length > maxLength) {
        return inputString.substring(0, maxLength) + '...';
    } else {
        return inputString;
    }
};

    // Fetch data from "/api/d" endpoint
    fetch('/api/d')
        .then(response => response.json())
        .then(data => {
            // Call a function to populate the table with fetched data
            populateTransactionTable(data);
        })
        .catch(error => console.error('Error fetching data:', error));

    // Function to populate the table with data
    function populateTransactionTable(data) {
        const tableBody = document.querySelector('#transactionTable tbody');

        // Loop through the data and create table rows
        data.forEach(item => {
            item.transactions.forEach(transaction => {
                const row = document.createElement('tr');

                const up = `${truncateString(transaction.pengirim, 5)}`;                               
                const down = `${truncateString(transaction.penerima, 5)}`;      

                const hash = `${truncateString(item.txhash && item.txhash.length > 0 ? item.txhash.join('<br>') : '-' , 5)}`;
                const tx = `${truncateString(item.txhash && item.txhash.length > 0 ? item.txhash.join('<br>') : '-')}`;
                const tes = `${truncateString(item.txhash.length > 0 ? item.txhash.join('') : '')}`;

// <td>${item.txhash && item.txhash.length > 0 ? item.txhash.join('<br>') : '-'}</td>
                row.innerHTML = `
                    
                    <td><a href='/${hash}'>${hash}</td>
                    <td>${transaction.date_time}</td>
                    <td>${transaction.opt}</td>
                    <td>${transaction.currency}</td>
                    <td>${transaction.value}</td>
                    <td><a href='/${transaction.pengirim}'>${up}<a></td>
                    <td><a href='/${transaction.penerima}'>${down}<a></td>                  
                `;
                tableBody.appendChild(row);
                
            });
        });
    }


    const reloadInterval = 60000; // 60 detik
    const intervalId = setInterval(fetch, reloadInterval);
</script>